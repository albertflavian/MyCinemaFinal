@model MyCinema.Models.Users

@{
    ViewBag.Title = "Registration";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Error!</strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "" })
            <div class="firstname-lastname-container">
                <div class="firstname">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { placeholder = "First Name", @class = "firstname" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "firstname" })
                </div>

                <div class="lastname">

                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { placeholder = "Last Name", @class = "lastname" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "lastname" })
                </div>
            </div>


            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { placeholder = "Email", @class = "lastname" } })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "lastname" })
                @Html.ValidationMessage("EmailExist", new { @class = "lastname" })

            </div>

            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { placeholder = "Username", @class = "lastname" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "lastname" })

            </div>



            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { placeholder = "Password", @class = "lastname" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "lastname" })

            </div>

            <div class="firstname-lastname-container">

                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { placeholder = "Confirm password", @class = "lastname" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "lastname" })

            </div>

           

            <div class="button-container">
                <input type="submit" value="Submit" class="button" />
            </div>
        </div>
      
    }
}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
